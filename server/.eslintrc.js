module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir: __dirname,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    semi: ['error', 'always'],
    quotes: ['error', 'single'],
    'prefer-const': 'error',
    'no-const-assign': 'error',
    'no-var': 'error',
    'no-new-object': 'error',
    'object-shorthand': 'error',
    'quote-props': ['error', 'as-needed'],
    'no-prototype-builtins': 'error',
    'prefer-object-spread': 'error',
    'no-array-constructor': 'error',
    'array-callback-return': 'error',
    'prefer-destructuring': 'error',
    'prefer-template': 'error',
    'template-curly-spacing': 'error',
    'no-eval': 'error',
    'no-useless-escape': 'error',
    'wrap-iife': 'error',
    'no-loop-func': 'error',
    'prefer-rest-params': 'error',
    'default-param-last': 'error',
    'no-new-func': 'error',
    // "space-before-function-paren": "error",
    'space-before-blocks': 'error',
    'no-param-reassign': 'error',
    'prefer-spread': 'error',
    // "function-paren-newline": "error",
    'prefer-arrow-callback': 'error',
    'arrow-spacing': 'error',
    'arrow-parens': 'error',
    'arrow-body-style': 'error',
    'no-confusing-arrow': 'error',
    // "implicit-arrow-linebreak": "error",
    'no-duplicate-imports': 'error',
    'no-iterator': 'error',
    'no-restricted-syntax': 'error',
    'dot-notation': 'error',
    'no-restricted-properties': 'error',
    // "no-undef": "error",
    'one-var': ['error', 'never'],
    'no-multi-assign': 'error',
    'no-plusplus': 'error',
    'operator-linebreak': 'error',
    eqeqeq: 'error',
    'no-case-declarations': 'error',
    'no-nested-ternary': 'error',
    'no-unneeded-ternary': 'error',
    'no-mixed-operators': 'error',
    // 'nonblock-statement-body-position': 'error',
    'brace-style': 'error',
    'no-else-return': 'error',
    'spaced-comment': 'warn',
    'no-new-wrappers': 'error',
    radix: 'error',
    'id-length': 'warn',
    // camelcase: 'warn',
    // 'new-cap': 'warn',
    'no-underscore-dangle': 'warn',
    'no-restricted-globals': 'error',
    'prettier/prettier': [
      'error',
      {
        endOfLine: 'auto',
      },
    ],
  },
};
